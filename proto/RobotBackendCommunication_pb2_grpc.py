# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from proto import RobotBackendCommunication_pb2 as proto_dot_RobotBackendCommunication__pb2


class RobotBackendCommunicatorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetAction = channel.unary_unary(
        '/robotbackendcommunication.RobotBackendCommunicator/GetAction',
        request_serializer=proto_dot_RobotBackendCommunication__pb2.Screenshot.SerializeToString,
        response_deserializer=proto_dot_RobotBackendCommunication__pb2.AgentAction.FromString,
        )


class RobotBackendCommunicatorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetAction(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RobotBackendCommunicatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetAction': grpc.unary_unary_rpc_method_handler(
          servicer.GetAction,
          request_deserializer=proto_dot_RobotBackendCommunication__pb2.Screenshot.FromString,
          response_serializer=proto_dot_RobotBackendCommunication__pb2.AgentAction.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'robotbackendcommunication.RobotBackendCommunicator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
